
#user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

   ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    ##
    # Gzip Settings
    ##

    gzip on;

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # include /etc/nginx/conf.d/*.conf;

    server {
         listen 80;
        listen [::]:80;
        
        server_name techinterviewsolutions.net www.techinterviewsolutions.net;
        root /usr/share/nginx/html;

        #access_log  /var/log/nginx/host.access.log  main;

        # Security headers
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        # add_header X-Content-Type-Options nosniff;
        # add_header Content-Security-Policy 'frame-ancestors https://techinterviewsolutions.net';
        # add_header X-XSS-Protection "1; mode=block";
        # add_header Referrer-Policy "origin";

        location / {
            index  index.html index.htm;
            # Remove .html extension
            if ($request_uri ~ ^/(.*)\.html(\?|$)) {
                return 302 /$1$is_args$args;
            }
            try_files $uri $uri.html $uri/ = 404;
        }
        # remove trailing slash
        # location ~ (?<no_slash>.*)/$ {
        #     return 301 $scheme://$host$no_slash;
        # }
        if (!-d $request_filename) {
            rewrite ^/(.*)/$ /$1 permanent;
        }
        
        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;

        location = /50x.html {
            root   /usr/share/nginx/html;
        }
            
        
    }
}
